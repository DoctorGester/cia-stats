extends /base.jade

block append head
    script(type="text/javascript", src="http://code.highcharts.com/highcharts.js")
    script(type="text/javascript", src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js")

block content
    div.ez-box
        h2.content-head.is-center Crumbling island arena stats
    div.ez-wr
        div#winRates.stats-graph
        div#games.stats-graph

    - var s = "";
    - var f = true;
    - for(data : model.generalWinrates) { s = s + (f ? " " : ", ") + "['" + data.hero + "', " + data.winRate + ", " + data.games + "]"; f = false; };
    - var seriesString = s

    script.
        var data = [#{seriesString}];
        var markers = _.sortBy(data, function(point) {
            return point[1];
        });
        
        _.each(markers, function(point) {
            point[0] = point[0].substring("npc_dota_hero_".length);
            point[1] *= 100;
        });

        var games = _.reduce(markers, function(a, b) { return a + b[2]; }, 0);
        var template = "http://cdn.dota2.com/apps/dota2/images/heroes/$_icon.png";

        var heroIconFormatter = function () {
            return '<img style="width: 24px; height: 24px;" src="' + template.replace("\$", this.point.name) + '">';
        };

        var heroIconPlotOptions = {
            column: {
                colorByPoint: true,
                dataLabels: {
                    enabled: true,
                    useHTML: true,
                    formatter: heroIconFormatter,
                    y: 26
                }
            }
        };

        Highcharts.chart('winRates', {
            chart: {
                type: "column"
            },
            credits: {
                enabled: false
            },
            xAxis: {
                labels: {
                    enabled: false
                }
            },
            yAxis: { 
                min: 0,
                max: 100
            },
            tooltip: {
                formatter: function() {
                    return '<b>' + this.point.name + '</b>: ' + this.y.toFixed(1) + ' %';
                }
            },
            title: {
                text: "Winrates"
            },
            subtitle: { text: "based on " + games + " rounds"},
            plotOptions: heroIconPlotOptions,
            series: [{
                showInLegend: false,
                data: markers
            }]
        });

        markers = _.sortBy(data, function (point) {
            return point[2];
        });

        markers = _.map(markers, function(point) {
           return {
               y: point[2],
               name: point[0]
           };
        });

        Highcharts.chart('games', {
            xAxis: {
                labels: {
                    enabled: false
                }
            },
            chart: {
                type: "column"
            },
            credits: {
                enabled: false
            },
            title: {
                text: "Rounds played"
            },
            plotOptions: heroIconPlotOptions,
            series: [{
                showInLegend: false,
                data: markers,
                name: "Rounds played"
            }]
        });